쿠키
: 서버가 사용자의 웹 브라우저에 전송하는 작은 데이터 조각
-클라이언트 측에서 저장되는 작은 데이터 파일로, 사용자 인증, 추적, 상태 유지 등에 사용되는 데이터 저장 방식

웹 브라우저가 서버에 웹 페이지를 요청 -> 서버는 요청받은 페이지와 쿠키를 전송한다 -> 동일한 서버에 다른 페이지를 
요청하는 경우 이전에 받은 쿠키와 요청을 함께 보낸다. 

쿠키 사용 원리
-브라우저(클라이언트)는 쿠키를 key-value의 데이터 형식으로 저장
-동일한 서버에 재요청 시 저장된 쿠키를 함께 전송
-쿠키는 두 요청이 동일한 브라우저에서 보내온 것인지를 판단할 때 주로 사용됨
: 이를 이용해 사용자의 로그인 상태를 유지할 수 있다. 상태가 없는(stateless) HTTP 프로토콜에서 상태 정보를 기억시켜주기 때문

서버의 응답 헤더에서 쿠키 정보(set-cookie)를 확인할 수 있음

쿠키 사용 목적
1.세션 관리(session management) : 로그인, 아이디 자동완성, 팝업창 숨기기, 장바구니 등의 정보 관리
2.개인화(personalization) : 사용자 선호, 테마 등의 설정
3.트래킹(tracking) : 사용자 행동을 기록 및 분석

session
: 서버 측에서 생성되어 클라이언트와 서버 간의 상태를 유지, 상태 정보를 저장하는 데이터 저장 방식
쿠키에 세션 데이터를 저장하여 매 요청시마다 세션 데이터를 함께 보냄
-클라이언트가 로그인을 하면 서버가 세션 데이터를 생성 후 저장
-생성된 세션 데이터에 인증할 수 있는 세션 아이디를 발급
-발급한 세션 아이디를 클라이언트에게 응답과 함께 전달
-클라이언트는 응답과 함께 받은 세션 아이디를 쿠키에 저장
-클라이언트가 다시 동일한 서버에 접속하면 요청과 함께 쿠키(세션 아이디가 저장된)를 서버에 전달
-쿠키는 요청 때마다 서버에 함께 전송되므로 서버에서 세션 아이디를 확인해 로그인 되어있다는 것을 알도록 함

쿠키와 세션은  모두 서버와 클라이언트 간의 상태를 유지하기 위함이다.(HTTP는 무연결 지향)

django에서 세션 정보는 데이터베이스의 django-session테이블에 저장됨

Django Authentication System

장고가 기본적으로 제공하는 user model은 내장된 auth앱의 User class를 사용
별도의 설정 없이 사용할 수 있어 간편하지만, 개발자가 직접 수정할 수 없는 문제가 존재 
-> 이를 대체할 커스텀 User class를 작성(반드시 프로젝트 migrate전에 생성할 것)
(참고) https://docs.djangoproject.com/en/4.2/topics/auth/customizing/#substituting-a-custom-user-model
-models.py에 AbstractUser를 상속받는 User class를 작성(기존 User class와 마찬가지)
-settings.py에서 장고 프로젝트가 사용하는 기본 User모델을 커스텀 User모델로 지정
-admin.py에서 등록 

※ models.Model - AbstractBaseUser - AbstractUser - User순으로 상속이 이루어짐
AbstractUser class : 관리자 권한과 함께 완전한 기능을 가지고 있는 User model을 구현하는 추상 기본클래스
추상기본클래스? 

로그인 기능 구현
login은 session을 create하는 과정
-서버가 세션 데이터를 생성 후 저장

AuthenticationForm()
: 로그인 인증에 사용할 데이터를 입력 받는 built-in-form
login(request, user) 
: AuthenticationForm을 통해 인증된 사용자를 로그인 하는 함수
get_user()
: AuthenticationForm의 인스턴스 메서드, 입력받은 데이터가 유효성 검사를 통과했을 경우 로그인 한 사용자 객체를 반환

회원가입 -> ModelForm(DB에 저장하기 위함)
로그인 -> AuthenticationForm(DB에 저장하지 않음)

admin/admin1234
application-storage-cookies에서 세션 아이디가 담긴 쿠키를 확인 가능

로그아웃 기능 구현
logout은 session data를 삭제하는 과정
logout()
: 현재 요청에 대한 세션 데이터를 데이터베이스에서 삭제, 클라이언트의 쿠키에서도 세션 아이디를 삭제
로그아웃이 이루어지면 application-storage-cookies에서 세션 아이디가 담긴 쿠키가 사라진 것을 확인 가능

template with authentication data
화면에 로그인 정보 출력하기

context processors
: template이 렌더링 될 때 호출 가능한 컨텍스트 데이터 목록
작성된 컨텍스트 데이터는 기본적으로 템플릿에서 사용 가능한 변수로 포함됨
(장고에서 자주 사용하는 데이터 목록을 미리 템플릿에 로드해 둔 것)
※추상 기본 클래스 - 몇 가지 공통 정보를 여러 다른 모델에 넣을 때 사용하는 클래스

